{"version":3,"file":"static/js/13.cb8abb41.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","webpack://phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/LogoutButton/LogoutButton.jsx","webpack://phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://phonebook/./src/pages/Phonebook/Phonebook.module.css?1c37","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  padding: 0.3rem;\r\n  background-color: #f3d9b1;\r\n  border-radius: 5px;\r\n  width: fit-content;\r\n\r\n  ${(props) =>\r\n    props.$red &&\r\n    css`\r\n      color: #f7e2de;\r\n      background-color: #c33149;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.$circle &&\r\n    css`\r\n      border-radius: 100%;\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactForm\":\"ContactForm_ContactForm__5fUXH\",\"Label\":\"ContactForm_Label__CIszX\",\"Input\":\"ContactForm_Input__vykZh\"};","import css from \"./ContactForm.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addContactOp } from \"../../redux/operations\";\r\nimport { getContacts, getToken } from \"../../redux/selectors\";\r\nimport { Notify } from \"notiflix\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const token = useSelector(getToken);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const form = event.target;\r\n    const name = form.elements.name.value;\r\n    if (contacts.some((contact) => contact.name.toLowerCase() === name.toLowerCase())) {\r\n      Notify.failure(`${name} is already on the list!`);\r\n    } else {\r\n      const number = form.elements.number.value;\r\n      dispatch(addContactOp({ token: token, contact: { name, number } }));\r\n    }\r\n    form.reset();\r\n  };\r\n  const nameId = nanoid();\r\n  const numberId = nanoid();\r\n  return (\r\n    <form onSubmit={handleSubmit} className={css.ContactForm}>\r\n      <label className={css.Label} htmlFor={nameId}>\r\n        Name:\r\n      </label>\r\n      <input\r\n        id={nameId}\r\n        className={css.Input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n      <label className={css.Label} htmlFor={numberId}>\r\n        Number:\r\n      </label>\r\n      <input\r\n        id={numberId}\r\n        className={css.Input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n        required\r\n      />\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactsList\":\"ContactsList_ContactsList__S3OVU\",\"ListItem\":\"ContactsList_ListItem__cdYaE\",\"ListItemContainer\":\"ContactsList_ListItemContainer__YrBdW\"};","import css from \"./ContactsList.module.css\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { getContacts, getToken } from \"../../redux/selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteContactOp, getContactsOp } from \"../../redux/operations\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst ContactsList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const token = useSelector(getToken);\r\n  useEffect(() => {\r\n    if (token) {\r\n      dispatch(getContactsOp(token));\r\n    }\r\n  }, [dispatch, token]);\r\n\r\n  return (\r\n    <>\r\n      {contacts.length === 0 ? (\r\n        <p>There is no one to show</p>\r\n      ) : (\r\n        <ul className={css.ContactsList}>\r\n          {contacts.map((contact) => {\r\n            const handleRemove = () => {\r\n              dispatch(deleteContactOp({ id: contact.id, token: token }));\r\n            };\r\n            return (\r\n              <li key={nanoid()} className={css.ListItem}>\r\n                <div className={css.ListItemContainer}>\r\n                  {`${contact.name}: ${contact.number}`}\r\n                  <Button $red onClick={handleRemove}>\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter\":\"Filter_Filter__elfXJ\"};","import { useDispatch } from \"react-redux\";\r\nimport css from \"./Filter.module.css\";\r\nimport { debounce } from \"lodash\";\r\nimport { setFilter } from \"../../redux/filterSlice\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const handleFilter = (event) => {\r\n    dispatch(setFilter(event.target.value));\r\n  };\r\n  return (\r\n    <form className={css.Filter}>\r\n      <label>Find contacts by name: </label>\r\n      <input type=\"text\" onChange={debounce(handleFilter, 500)}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { getToken } from \"../../redux/selectors\";\r\nimport { logoutOp } from \"../../redux/operations\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst LogoutButton = () => {\r\n  const token = useSelector(getToken);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    dispatch(logoutOp(token));\r\n  };\r\n\r\n  return (\r\n    <Button $red onClick={handleClick}>\r\n      Log out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"UserMenuModal\":\"UserMenu_UserMenuModal__CDOf6\",\"UserMenu\":\"UserMenu_UserMenu__ua3GH\",\"HideButton\":\"UserMenu_HideButton__3Ljc-\"};","import { useSelector } from \"react-redux\";\r\nimport { getUser } from \"../../redux/selectors\";\r\nimport LogoutButton from \"../LogoutButton/LogoutButton\";\r\nimport css from \"./UserMenu.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../Button/Button\";\r\n\r\nconst UserMenu = ({ hide }) => {\r\n  const user = useSelector(getUser);\r\n  return (\r\n    <div className={css.UserMenuModal} onClick={hide}>\r\n      <div className={css.UserMenu}>\r\n        <Button $red $circle className={css.HideButton} onClick={hide}>\r\n          X\r\n        </Button>\r\n\r\n        <p>\r\n          Logged in as: <b>{user.name}</b>\r\n        </p>\r\n        <p>\r\n          Your e-mail: <b>{user.email}</b>\r\n        </p>\r\n        <LogoutButton></LogoutButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  hide: PropTypes.func,\r\n};\r\n\r\nexport default UserMenu;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"PhonebookPage\":\"Phonebook_PhonebookPage__Ea7F4\",\"Header\":\"Phonebook_Header__SIaLc\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\r\nimport ContactsList from \"../../components/ContactsList/ContactsList\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport { getUser } from \"../../redux/selectors\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getCurrentUserOp } from \"../../redux/operations\";\r\nimport UserMenu from \"../../components/UserMenu/UserMenu\";\r\nimport css from \"./Phonebook.module.css\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nconst Phonebook = () => {\r\n  const [userMenuVisible, setUserMenuVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n  const user = useSelector(getUser);\r\n  const dispatch = useDispatch();\r\n\r\n  const showUserMenu = () => {\r\n    setUserMenuVisible(true);\r\n    console.log(userMenuVisible);\r\n  };\r\n\r\n  const hideUserMenu = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      setUserMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.token === null) {\r\n      navigate(\"/\");\r\n      return;\r\n    }\r\n    if (user.name === null) {\r\n      dispatch(getCurrentUserOp(user.token));\r\n      return;\r\n    }\r\n  }, [user, navigate, dispatch]);\r\n\r\n  return user.name ? (\r\n    <div className={css.PhonebookPage}>\r\n      {userMenuVisible && <UserMenu hide={hideUserMenu} />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}>\r\n        <h1>Phonebook</h1>\r\n        <Button type=\"button\" onClick={showUserMenu}>\r\n          User Menu\r\n        </Button>\r\n      </div>\r\n      <h2 className={css.Header}>Add a contact</h2>\r\n      <ContactForm />\r\n      <h2 className={css.Header}>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  ) : user.token ? (\r\n    <h2>Loading user data</h2>\r\n  ) : (\r\n    <h2>Redirecting...</h2>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n"],"names":["Button","styled","_templateObject","_taggedTemplateLiteral","props","$red","css","_templateObject2","$circle","_templateObject3","dispatch","useDispatch","contacts","useSelector","getContacts","token","getToken","nameId","nanoid","numberId","_jsxs","onSubmit","event","preventDefault","form","target","name","elements","value","some","contact","toLowerCase","Notify","concat","number","addContactOp","reset","className","children","_jsx","htmlFor","id","type","pattern","title","required","useEffect","getContactsOp","_Fragment","length","map","onClick","deleteContactOp","onChange","debounce","setFilter","logoutOp","_ref","hide","user","getUser","email","LogoutButton","_useState","useState","_useState2","_slicedToArray","userMenuVisible","setUserMenuVisible","navigate","useNavigate","getCurrentUserOp","UserMenu","e","currentTarget","style","display","justifyContent","alignItems","console","log","ContactForm","Filter","ContactsList"],"sourceRoot":""}